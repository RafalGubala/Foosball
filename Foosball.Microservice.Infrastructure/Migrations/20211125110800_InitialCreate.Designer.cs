// <auto-generated />
using System;
using Foosball.Microservice.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Foosball.Microservice.Infrastructure.Migrations
{
    [DbContext(typeof(FoosballDbContext))]
    [Migration("20211125110800_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.AggregateRoot.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("TeamA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.Entities.Goal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ScoreAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamASetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeamBSetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamASetId");

                    b.HasIndex("TeamBSetId");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.Entities.Set", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Set");
                });

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.Entities.Goal", b =>
                {
                    b.HasOne("Foosball.Microservice.DomainLogic.Entities.Set", null)
                        .WithMany("TeamAGoals")
                        .HasForeignKey("TeamASetId");

                    b.HasOne("Foosball.Microservice.DomainLogic.Entities.Set", null)
                        .WithMany("TeamBGoals")
                        .HasForeignKey("TeamBSetId");
                });

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.Entities.Set", b =>
                {
                    b.HasOne("Foosball.Microservice.DomainLogic.AggregateRoot.Game", null)
                        .WithMany("Sets")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.AggregateRoot.Game", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("Foosball.Microservice.DomainLogic.Entities.Set", b =>
                {
                    b.Navigation("TeamAGoals");

                    b.Navigation("TeamBGoals");
                });
#pragma warning restore 612, 618
        }
    }
}
